# This file was automagically generated by mbed.org.
# If you would like to add your own targets, create a
# project.cmake file locally in your project directory.

CMAKE_MINIMUM_REQUIRED(VERSION 3.9)

enable_testing()

INCLUDE("cmake/mbed_compiler_settings.cmake")

# here starts the project
PROJECT(mbed-os-sensor-spikes C CXX ASM)

INCLUDE("cmake/mbed_compiler_flags.cmake")

INCLUDE("cmake/mbed_definitions.cmake")

INCLUDE("cmake/mbed_include_directories.cmake")

INCLUDE("cmake/project_include_directories.cmake")

INCLUDE("cmake/mbed_source_files.cmake")

# executable ${PROJECT_NAME}
ADD_EXECUTABLE(${PROJECT_NAME}
    ${MBED_SOURCE_FILES}
    src/main.cpp
  )

# Specify whether an executable exports symbols for loadable modules.
SET_TARGET_PROPERTIES(${PROJECT_NAME} PROPERTIES ENABLE_EXPORTS 1)
SET_TARGET_PROPERTIES(${PROJECT_NAME} PROPERTIES SUFFIX ".elf")
# SET_TARGET_PROPERTIES(${PROJECT_NAME} PROPERTIES LINKER_LANGUAGE CXX)

SET(CMAKE_C_OUTPUT_EXTENSION ".o")
SET(CMAKE_CXX_OUTPUT_EXTENSION ".o")
SET(CMAKE_ASM_OUTPUT_EXTENSION ".o")
SET(CMAKE_C_OUTPUT_EXTENSION_REPLACE 1)
SET(CMAKE_CXX_OUTPUT_EXTENSION_REPLACE 1)

# add syslibs dependencies to create the correct linker order
TARGET_LINK_LIBRARIES(${PROJECT_NAME} ${MBED_LINK_LIBS} )

# compile link script
SET(TMP_LINK_SCRIPT "${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}_pp.link_script.ld")

#SET(PRE_LINK_COMMAND arm-none-eabi-cpp)
SET(PRE_LINK_COMMAND "${CMAKE_LD_COMPILER}")
SET(PRE_LINK_COMMAND "${PRE_LINK_COMMAND} ${PRE_LINK_FLAGS}")
SET(PRE_LINK_COMMAND "${PRE_LINK_COMMAND} ${MBED_LINK_SCRIPT}")
SET(PRE_LINK_COMMAND "${PRE_LINK_COMMAND} -o ${TMP_LINK_SCRIPT}")

separate_arguments(PRE_LINK_COMMAND_LIST NATIVE_COMMAND "${PRE_LINK_COMMAND}")
add_custom_command(TARGET ${PROJECT_NAME} PRE_LINK
    COMMAND ${PRE_LINK_COMMAND_LIST}
    BYPRODUCTS "${TMP_LINK_SCRIPT}"
    WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}
)

SET(MEMORY_MAP_FILE ${PROJECT_NAME}.map)


SET(CMAKE_CXX_LINK_FLAGS "${COMMON_LINK_FLAGS}")
SET(CMAKE_CXX_LINK_FLAGS "${CMAKE_CXX_LINK_FLAGS} -Wl,-Map=${MEMORY_MAP_FILE}")
SET(CMAKE_CXX_LINK_FLAGS "${CMAKE_CXX_LINK_FLAGS} ${LD_SYS_LIBS}")
SET(CMAKE_CXX_LINK_FLAGS "${CMAKE_CXX_LINK_FLAGS} -T ${TMP_LINK_SCRIPT}")

get_target_property(TARGET_OUTPUT_NAME ${PROJECT_NAME} OUTPUT_NAME)
add_custom_command(TARGET ${PROJECT_NAME} POST_BUILD
    COMMAND ${ELF2BIN} -O ihex ${PROJECT_NAME}.elf ${PROJECT_NAME}.hex
    BYPRODUCTS "${PROJECT_NAME}.hex"
    WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}
)

SET(TOOLCHAN GCC_ARM)
add_custom_command( TARGET ${PROJECT_NAME} 
                    POST_BUILD
                    COMMAND python ../../mbed-os/tools/memap.py ${MEMORY_MAP_FILE} -t ${TOOLCHAN}
                    WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}
)

if(EXISTS ${MEMORY_MAP_FILE})
configure_file(${CMAKE_CURRENT_BINARY_DIR}/${MEMORY_MAP_FILE} ${CMAKE_CURRENT_BINARY_DIR}/${MEMORY_MAP_FILE}.old COPYONLY)
else()
file(TOUCH ${MEMORY_MAP_FILE})
endif()
